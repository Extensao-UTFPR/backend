openapi: '3.0.0'
info:
  version: 1.0.0
  title: API Backend
  termsOfService: http://swagger.io/terms/
  contact:
    email: vinicius@utfpr.edu.br
servers:
  - url: http://localhost:3333
paths:
  /users:
    post:
      summary: Criar um novo usuário
      description: Criar um novo usuário
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    get:
      summary: Listar usuários
      description: Listar usuários paginado e com filtros
      tags:
        - users
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: pagina a ser trazida
        - in: query
          name: limit
          schema:
            type: integer
          description: limite de registros
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/{user_id}:
    get:
      summary: Listar informações de um user
      parameters:
        - $ref: '#/components/parameters/user_id'
      description: Listar informações de um user
      tags:
        - users
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
    put:
      summary: Atualizar um usuário
      parameters:
        - $ref: '#/components/parameters/user_id'
      description: Atualizar um usuário
      tags:
        - users
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
    delete:
      parameters:
        - $ref: '#/components/parameters/user_id'
      summary: Deletar um usuário
      description: Atualizar um usuário
      tags:
        - users
      responses:
        200:
          description: Sucesso ao deletar user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

        404:
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

  /products:
    post:
      summary: criar produto
      tags:
        - products
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /delivery-points:
    post:
      summary: Criar ponto de entrega
      tags:
        - delivery points
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryPoints'

    get:
      summary: Listar pontos de entrega
      tags:
        - delivery points
      parameters:
        - in: query
          name: state
          required: true
          schema:
            type: string
          description: filtrar pontos de entrega por estado

        - in: query
          name: page
          schema:
            type: integer
          description: pagina a ser trazida

        - in: query
          name: limit
          schema:
            type: integer
          description: limite de registros
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryPoints'

  /delivery-points/{point_id}:
    get:
      summary: Listar informações de um ponto de entrega
      tags:
        - delivery points
      parameters:
        - $ref: '#/components/parameters/point_id'
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryPoint'
        404:
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

    put:
      summary: Atualizar um ponto de entrega
      parameters:
        - $ref: '#/components/parameters/point_id'
      tags:
        - delivery points
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryPoints'
        404:
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

    delete:
      summary: Deletar um ponto de entrega
      parameters:
        - $ref: '#/components/parameters/point_id'
      tags:
        - delivery points
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

        404:
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

  /weekly-list:
    post:
      summary: Criar lista semanal
      tags:
        - weekly lists
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeeklyLists'

    get:
      summary: Listar listas semanais
      tags:
        - weekly lists
      parameters:
        - in: query
          name: user_id
          required: true
          schema:
            type: string
          description: filtrar listas semanais por usuário

        - in: query
          name: page
          schema:
            type: integer
          description: pagina a ser trazida

        - in: query
          name: limit
          schema:
            type: integer
          description: limite de registros
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeeklyLists'

  /weekly-list/{list_id}:
    get:
      summary: Listar informações de uma lista semanal
      tags:
        - weekly lists
      parameters:
        - $ref: '#/components/parameters/list_id'
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeeklyLists'
        404:
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

    put:
      summary: Atualizar uma lista semanal
      parameters:
        - $ref: '#/components/parameters/list_id'
      tags:
        - weekly lists
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeeklyLists'
        404:
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

    delete:
      summary: Deletar uma lista semanal
      parameters:
        - $ref: '#/components/parameters/list_id'
      tags:
        - weekly lists
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

        404:
          description: Não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

tags:
  - name: users
    description: Tudo sobre usuários
  - name: products
    description: Tudo sobre produtos
  - name: delivery points
    description: Tudo sobre pontos de entrega
  - name: weekly lists
    description: Tudo sobre listas semanais

components:
  parameters:
    user_id:
      required: true
      description: 'id do user a ser operado'
      name: user_id
      in: path
      schema:
        type: string

    point_id:
      required: true
      description: 'id do ponto de entrega a ser operado'
      name: point_id
      in: path
      schema:
        type: string

    list_id:
      required: true
      description: 'id da lista semanal a ser operada'
      name: list_id
      in: path
      schame:
        type: string

  schemas:
    User:
      type: object
      required:
        - id
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        password:
          type: string
        cpf:
          type: string
        role:
          type: string
        created_at:
          type: string
        updated_at:
          type: string

    DeliveryPoints:
      type: object
      required:
        - id
      properties:
        city:
          type: string
        state:
          type: string
        suburb:
          type: string
        street:
          type: string
        cep:
          type: integer
        number:
          type: integer
        latitude:
          type: number
        longitude:
          type: number

    WeeklyLists:
      type: object
      required:
        - id
      properties:
        start_date:
          type: string
        status:
          type: string
        details:
          type: array
          items:
            type: object
            properties:
              product_id:
                type: string
              due_date:
                type: string
              lot:
                type: string
              quantitty:
                type: integer
              unit_price:
                type: float
              discount:
                type: float
              total_price:
                type: float

    NotFound:
      type: object
      required:
        - status
      properties:
        status:
          type: string
        message:
          type: string

  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
